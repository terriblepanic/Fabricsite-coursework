<?php
/* -------------------------------------------------
   add_fabric.php ‚Äì ¬´–î–æ–±–∞–≤–∏—Ç—å —Ç–∫–∞–Ω—å¬ª (–æ–±–Ω–æ–≤–ª—ë–Ω–Ω–∞—è)
   ------------------------------------------------- */

require_once __DIR__ . '/../config/db.php';
require_once __DIR__ . '/../includes/auth_check.php';

/* ‚Äî –º–∏–Ω–∏-—Ö–µ–ª–ø–µ—Ä –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞ ‚Äî */
if (!function_exists('h')) {
    function h(string $s): string
    {
        return htmlspecialchars($s, ENT_QUOTES | ENT_SUBSTITUTE, 'UTF-8');
    }
}
/* ‚Äî –¥–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –¥–ª—è admin ‚Äî */
requireAdmin();

/* ‚Äî —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ ‚Äî */
$fabricTypes = $pdo->query('SELECT id,name FROM fabric_types')->fetchAll(PDO::FETCH_ASSOC);
$colors      = $pdo->query('SELECT id,name FROM colors')->fetchAll(PDO::FETCH_ASSOC);

$errors  = [];
$success = false;

/* ‚Äî –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã ‚Äî */
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    csrf_check();

    // —Å–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    $name        = trim($_POST['name']        ?? '');
    $type_id     = (int) ($_POST['type_id']   ?? 0);
    $color_id    = (int) ($_POST['color_id']  ?? 0);
    $length      = (float)($_POST['length_m'] ?? 0);
    $width       = (int)  ($_POST['width_cm'] ?? 0);
    $price       = (float)($_POST['price_rub']?? 0);
    $has_pattern = isset($_POST['has_pattern']) ? 1 : 0;
    $has_defect  = isset($_POST['has_defect'])  ? 1 : 0;
    $description = trim($_POST['description'] ?? '');
    $available   = isset($_POST['available'])   ? 1 : 0;                  // –≤–µ—Å –±–æ–ª—å—à–µ –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º

    // –ø—Ä–æ–≤–µ—Ä–∫–∞
    if ($name === '')   $errors[] = '–ù–∞–∑–≤–∞–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ.';
    if (!$type_id)      $errors[] = '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ç–∫–∞–Ω–∏.';
    if (!$color_id)     $errors[] = '–í—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç.';
    if ($price <= 0)    $errors[] = '–¶–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è.';

    /* ‚Äî –∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) ‚Äî */
    $imagePath = '';
    if (!empty($_FILES['image']['name'])) {
        $err = $_FILES['image']['error'];
        if ($err !== UPLOAD_ERR_OK) {
            $errors[] = '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ (–∫–æ–¥ ' . $err . ')';
        } else {
            $mime = mime_content_type($_FILES['image']['tmp_name']);
            $allowed = ['image/jpeg'=>'.jpg','image/png'=>'.png','image/webp'=>'.webp'];

            if (!isset($allowed[$mime])) {
                $errors[] = '–î–æ–ø—É—Å—Ç–∏–º—ã —Ç–æ–ª—å–∫–æ JPG, PNG, WEBP.';
            } elseif ($_FILES['image']['size'] > 2*1024*1024) {
                $errors[] = '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä 2 –ú–ë.';
            } else {
                $dir = __DIR__.'/../assets/img/';
                if (!is_dir($dir)) mkdir($dir,0755,true);
                if (!is_writable($dir)) {
                    $errors[] = '–ü–∞–ø–∫–∞ ¬´assets/img¬ª –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏.';
                } else {
                    $file = 'fabric_' . time() . '_' . bin2hex(random_bytes(4)) . $allowed[$mime];
                    if (move_uploaded_file($_FILES['image']['tmp_name'],$dir.$file)) {
                        $imagePath = 'assets/img/' . $file;
                    } else {
                        $errors[] = '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.';
                    }
                }
            }
        }
    }

    /* ‚Äî –∑–∞–ø–∏—Å—å –≤ –ë–î ‚Äî */
    if (!$errors) {
        $pdo->prepare(
            'INSERT INTO fabrics
             (name,type_id,color_id,length_m,width_cm,price_rub,
              has_pattern,has_defect,image_path,description,available,created_at)
             VALUES (?,?,?,?,?,?,?,?,?,?,?,?,NOW())'
        )->execute([
            $name,$type_id,$color_id,
            $length,$width,$price,
            $has_pattern,$has_defect,$imagePath,$description,$available
        ]);

        $success = true;
        $_POST   = [];             // –æ—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º—ã
    }
}

/* ‚Äî –≤—ã–≤o–¥ ‚Äî */
require_once __DIR__ . '/../includes/header.php';
?>
    <h2>–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Ç–∫–∞–Ω—å</h2>

<?php if ($success): ?>
    <div class="success">üéâ –¢–∫–∞–Ω—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!</div>
<?php endif; ?>

<?php if ($errors): ?>
    <div class="errors"><ul>
            <?php foreach ($errors as $e) echo '<li>'.h($e).'</li>'; ?>
        </ul></div>
<?php endif; ?>

    <form method="post" enctype="multipart/form-data"
          class="glass-panel centered glass-form">
        <?php csrf_field(); ?>

        <div class="form-grid">

            <!-- 1. –ù–∞–∑–≤–∞–Ω–∏–µ (–Ω–∞ –≤—Å—é —à–∏—Ä–∏–Ω—É) -->
            <div class="form-group full">
                <label>–ù–∞–∑–≤–∞–Ω–∏–µ
                    <input type="text" name="name" class="glass-input"
                           value="<?= h($_POST['name'] ?? '') ?>" required>
                </label>
            </div>

            <!-- 2. –¢–∏–ø  +  –¶–≤–µ—Ç  (–æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞) -->
            <div class="form-group">
                <label>–¢–∏–ø
                    <select name="type_id" class="glass-select" required>
                        <option value="">‚Äî –≤—ã–±–µ—Ä–∏—Ç–µ ‚Äî</option>
                        <?php foreach ($fabricTypes as $t): ?>
                            <option value="<?= $t['id'] ?>"
                                <?= (!empty($_POST['type_id']) && $_POST['type_id']==$t['id']) ? 'selected' : '' ?>>
                                <?= h($t['name']) ?>
                            </option>
                        <?php endforeach; ?>
                    </select>
                </label>
            </div>

            <div class="form-group">
                <label>–¶–≤–µ—Ç
                    <select name="color_id" class="glass-select" required>
                        <option value="">‚Äî –≤—ã–±–µ—Ä–∏—Ç–µ ‚Äî</option>
                        <?php foreach ($colors as $c): ?>
                            <option value="<?= $c['id'] ?>"
                                <?= (!empty($_POST['color_id']) && $_POST['color_id']==$c['id']) ? 'selected' : '' ?>>
                                <?= h($c['name']) ?>
                            </option>
                        <?php endforeach; ?>
                    </select>
                </label>
            </div>

            <!-- 3. –ß–µ–∫–±–æ–∫—Å—ã: –æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞ –Ω–∞ –≤—Å—é —à–∏—Ä–∏–Ω—É -->
            <div class="form-group full checkbox-line">
                <label class="checkbox-item">
                    <input type="checkbox" class="glass-checkbox"
                           name="has_pattern" <?= !empty($_POST['has_pattern'])?'checked':'' ?>> –° —Ä–∏—Å—É–Ω–∫–æ–º
                </label>
                <label class="checkbox-item">
                    <input type="checkbox" class="glass-checkbox"
                           name="has_defect" <?= !empty($_POST['has_defect'])?'checked':'' ?>> –ï—Å—Ç—å –¥–µ—Ñ–µ–∫—Ç—ã
                </label>
                <label class="checkbox-item">
                    <input type="checkbox" class="glass-checkbox"
                           name="available" value="1" <?= !empty($_POST['available'])?'checked':'' ?>> –í –Ω–∞–ª–∏—á–∏–∏
                </label>
            </div>

            <!-- 4. –î–ª–∏–Ω–∞  +  –®–∏—Ä–∏–Ω–∞ -->
            <div class="form-group">
                <label>–î–ª–∏–Ω–∞ (–º)
                    <input type="number" step="0.01" name="length_m"
                           class="glass-input" value="<?= h($_POST['length_m'] ?? '') ?>">
                </label>
            </div>

            <div class="form-group">
                <label>–®–∏—Ä–∏–Ω–∞ (—Å–º)
                    <input type="number" name="width_cm"
                           class="glass-input" value="<?= h($_POST['width_cm'] ?? '') ?>">
                </label>
            </div>

            <!-- 5. –¶–µ–Ω–∞  (–æ—Ç–¥–µ–ª—å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞) -->
            <div class="form-group">
                <label>–¶–µ–Ω–∞ (‚ÇΩ)
                    <input type="number" step="0.01" name="price_rub" class="glass-input" required
                           value="<?= h($_POST['price_rub'] ?? '') ?>">
                </label>
            </div>

            <!-- 6. –û–ø–∏—Å–∞–Ω–∏–µ (full) -->
            <div class="form-group full">
                <label>–û–ø–∏—Å–∞–Ω–∏–µ
                    <textarea name="description" rows="4" class="glass-input"
                              style="resize:vertical"><?= h($_POST['description'] ?? '') ?></textarea>
                </label>
            </div>

            <!-- 7. –§–æ—Ç–æ (full) -->
            <div class="form-group full">
                <label>–§–æ—Ç–æ —Ç–∫–∞–Ω–∏
                    <input type="file" name="image" accept="image/*"
                           class="glass-input" style="padding:.45rem;">
                </label>
            </div>

        </div><!-- /.form-grid -->

        <div class="text-center" style="margin-top:1.5rem">
            <button type="submit" class="btn btn-primary">–î–æ–±–∞–≤–∏—Ç—å —Ç–∫–∞–Ω—å</button>
        </div>
    </form>

<?php require_once __DIR__ . '/../includes/footer.php'; ?>
